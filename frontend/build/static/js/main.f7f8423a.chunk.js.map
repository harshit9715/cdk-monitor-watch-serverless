{"version":3,"sources":["http-common.js","services/file-upload.service.js","components/image-upload.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","process","headers","file","onUploadProgress","formData","FormData","append","http","post","get","UploadImages","props","selectFile","bind","upload","state","currentFile","undefined","previewImage","progress","message","imageInfos","UploadService","getFiles","then","response","console","log","data","setState","event","this","target","files","URL","createObjectURL","Math","round","loaded","total","catch","err","error","className","type","accept","onChange","disabled","onClick","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","src","alt","map","img","index","href","sk","flex","flexWrap","labels","i","_","uniq","Name","concat","Parents","j","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7f8423a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BACKEND,\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nclass FileUploadService {\n  upload(file, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"file\", file);\n\n    return http.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new FileUploadService();","import React, { Component } from \"react\";\nimport UploadService from \"../services/file-upload.service\";\nimport _ from 'lodash';\nexport default class UploadImages extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n\n    this.state = {\n      currentFile: undefined,\n      previewImage: undefined,\n      progress: 0,\n      message: \"\",\n      imageInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      console.log(response.data)\n      this.setState({\n        imageInfos: response.data,\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      currentFile: event.target.files[0],\n      previewImage: URL.createObjectURL(event.target.files[0]),\n      progress: 0,\n      message: \"\"\n    });\n  }\n\n  upload() {\n    this.setState({\n      progress: 0,\n    });\n\n    UploadService.upload(this.state.currentFile, (event) => {\n      this.setState({\n        progress: Math.round((100 * event.loaded) / event.total),\n      });\n    })\n      .then((response) => {\n        this.setState({\n          message: response.data.message,\n        });\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          imageInfos: files.data,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the image!\",\n          currentFile: undefined,\n        });\n      });\n  }\n\n  render() {\n    const {\n      currentFile,\n      previewImage,\n      progress,\n      message,\n      imageInfos,\n    } = this.state;\n\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <label className=\"btn btn-default p-0\">\n              <input type=\"file\" accept=\"image/*\" onChange={this.selectFile} />\n            </label>\n          </div>\n\n          <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!currentFile}\n              onClick={this.upload}\n            >\n              Upload\n            </button>\n          </div>\n        </div>\n\n        {currentFile && (\n          <div className=\"progress my-3\">\n            <div\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              aria-valuenow={progress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: progress + \"%\" }}\n            >\n              {progress}%\n            </div>\n          </div>\n        )}\n\n        {previewImage && (\n          <div>\n            <img className=\"preview\" src={previewImage} alt=\"\" />\n          </div>\n        )}\n\n        {message && (\n          <div className=\"alert alert-secondary mt-3\" role=\"alert\">\n            {message}\n          </div> \n        )}\n\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">List of Files</div>\n          <ul className=\"list-group list-group-flush\">\n            {imageInfos &&\n              imageInfos.map((img, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <a href={img.sk}>\n                    <img className=\"preview\" src={img.sk} alt={img.sk} />\n                  </a>\n                    <text style={{flex: 1, flexWrap: 'wrap'}} >{`${img.labels.map(i => (_.uniq([i.Name].concat(i.Parents.map(j => j.Name)))))}`}</text>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport UploadImages from \"./components/image-upload.component\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h3>React Image Upload with Preview</h3>\n\n      <div className=\"content\">\n        <UploadImages />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}